summary(lm(Y ~ X1 + '^'(X1, 2) + X2 + '^'(X2, 2) + '*'(X1, X2)))
rm(list=ls())
summary(lm(Y ~ X1 + '^'(X1, 2) + X2 + '^'(X2, 2) + '*'(X1, X2), data = cakes))
summary(lm(Y ~ X1 + I(X1^2) + X2 + I(X2^2) + '*'(X1, X2), data = cakes))
summary(lm(Y ~ X1 + I(X1^2) + X2 + I(X2^2) + X1 * X2, data = cakes))
View(landrent)
?landrent
cor(landrent$Y, landrent$X2)
plot(landrent$X2, landrent$Y)
summary(lm(Y ~ X2, landrent))
ggplot(landrent, aes(x = X2, y = Y)) +
geom_point() +
labs(title="Figure 10: Scatterplot of Cow Density on Alfalfa Land Rent",
x = "\nDairy Cow Density (cows / sq. mi.)",
y = "Alfalfa Land Rent ($ / acre)\n")
cor(landrent$Y, landrent$X2)
summary(lm(Y ~ X2, landrent))
summary(lm(log(Y) ~ X2, landrent))
plot(lm(log(Y) ~ X2, landrent))
plot(log(Y) ~ X2, landrent)
plot(Y ~ X2, landrent)
summary(lm(Y ~ X2, landrent))
plot(lm(Y ~ X2, landrent))
plot(lm(log(Y) ~ X2, landrent))
plot(lm(Y ~ X1, landrent))
plot(Y ~ X1, landrent)
ggplot(landrent, aes(x = X1, y = Y)) +
geom_point() +
labs(title="Figure 11: Scatterplot of Average Land Rent on Alfalfa Land Rent",
x = "\nAverage Tillable Land Rent (cows / sq. mi.)",
y = "Alfalfa Land Rent ($ / acre)\n")
cor(landrent$X1, landrent$X2)
cor(landrent$X1, landrent$Y)
summary(lm(Y ~ X1 + X2, landrent))
ggplot(landrent, aes(x = X1 + X2, y = Y)) +
geom_point() +
labs(title="Figure 11: Scatterplot of Average Land Rent on Alfalfa Land Rent",
x = "\nAverage Tillable Land Rent (cows / sq. mi.)",
y = "Alfalfa Land Rent ($ / acre)\n")
summary(lm(Y ~ X1 + X2, landrent))
summary(lm(Y ~ X1))
summary(lm(Y ~ X1, landrent))
anova(landrent)
anova(lm(landrent))
anova(lm(Y ~ X1 + X2, landrent))
Anova(lm(Y ~ X1 + X2, landrent))
Anova(lm(Y ~ ., landrent))
Anova(lm(Y ~ . - X3, landrent))
summary(lm(Y ~ X1, landrent))
summary(lm(Y ~ X1 + X2, landrent))
Anova(lm(Y ~ . - X3, landrent))
Anova(lm(Y ~ X1 + X2, landrent))
scatter3D(landrent$X1, landrent$X2, landrent$Y, colvar = NULL,
main = "Figure 7. Quadratic Model of Palatability on Baking Time and Temperature",
xlab = "\nBaking Time (min)", ylab = "\nBaking Temp (F)", zlab = "\nPalatability")
Anova(Y ~ - X3, landrent)
Anova(lm(Y ~ - X3), landrent)
Anova(lm(Y ~ - X3, landrent)
Anova(lm(Y ~ - X3, landrent))
Anova(lm(Y ~ . - X3, landrent))
cor(landrent$X2, landrent$X3)
rm(list=ls())
fuel_summary <- summary(lm(FuelC ~ ., fuel2001))
fuel_f       <- fuel_summary$fstatistic
fuel_p       <- df(fuel_f[1], fuel_f[2], fuel_f[3])
alpha
alpha <- 0.05
alpha
fuel_p
View(Rateprof)
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
View(rateprof_trimmed_df)
summary(lm(rateprof_trimmed_df))
s <- summary(lm(rateprof_trimmed_df))
s$coefficients
s2 <- s$coefficients
s2[,3]
s2[,4]
s2[,4]
typeof(s2[,4])
min(s2[,4])
which.min(s2[,4])
which.max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
s <- summary(lm(rateprof_trimmed_df))
s
rateprof_trimmed <- rateprof_trimmed_df
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
p_value =  alpha + 1
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
while (p_value > alpha) {
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
}
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
rm(list=ls())
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
p_value =  alpha + 1
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
rateprof_trimmed <- rateprof_trimmed_df
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
View(s2)
p_value <- max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 2
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
View(rateprof_trimmed)
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
}
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4]) - 1
predictor_to_remove
rateprof_trimmed[,predictor_to_remove]
rm(list=ls())
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
s <- summary(lm(quality ~ ., rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed[,predictor_to_remove]
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
}
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
View(rateprof_trimmed)
rm(list=ls())
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
rateprof_trimmed <- rateprof_trimmed_df
alpha = 0.05
s <- summary(lm(quality ~ ., rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
while (p_value > alpha) {
s <- summary(lm(rateprof_trimmed))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed <- rateprof_trimmed[,-predictor_to_remove]
}
rm(list=ls())
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
alpha = 0.05
s <- summary(lm(quality ~ ., rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
while (p_value > alpha) {
s <- summary(lm(rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
predictor_to_remove <- which.max(s2[,4])
rateprof_trimmed_df <- rateprof_trimmed_df[,-predictor_to_remove]
}
View(rateprof_trimmed_df)
s <- summary(lm(rateprof_trimmed_df))
s_orig <- summary(lm(quality ~ ., rateprof_trimmed_df))
rateprof_trimmed_df <- Rateprof[,- c(1,5,6,7)]
s_orig <- summary(lm(quality ~ ., rateprof_trimmed_df))
s <- summary(lm(quality ~ ., rateprof_trimmed_df))
s2 <- s$coefficients
p_value <- max(s2[,4])
while (p_value > alpha) {
s <- summary(lm(rateprof_trimmed_df))
c <- s$coefficients
p_value <- max(c[,4])
predictor_to_remove <- which.max(c[,4])
rateprof_trimmed_df <- rateprof_trimmed_df[,-predictor_to_remove]
}
s_orig
View(Rateprof)
df <- Rateprof[,- c(1,5,6,7, 8)]
df$Y <- Rateprof$quality
View(df)
d <- cbind(Rateprof$quality, df)
View(df)
rm(list=ls())
rm(list=ls())
df <- Rateprof[,- c(1, 5, 6, 7, 8)]
df <- cbind(Rateprof$quality, df)
df <- cbind(Y = Rateprof$quality, df)
rm(list=ls())
df <- Rateprof[,- c(1, 5, 6, 7, 8)]
df <- cbind(Y = Rateprof$quality, df)
f < read.csv('/Users/Will/msan/601/challenge_1/Credit.csv', headers=T)
f <- read.csv('/Users/Will/msan/601/challenge_1/Credit.csv', headers=T)
f <- read.csv('/Users/Will/msan/601/challenge_1/Credit.csv', header=T)
f <- read.csv('/Users/Will/msan/601/challenge_1/Credit.csv', header=T)
f <- read.csv('/Users/Will/msan/601/Credit.csv', header=T)
f
f <- f[,2:]
f <- f[,2:ncol(f)]
View(f)
write.csv('/Users/Will/msan/692/wjyoung-web/sample.csv', f)
?write
write.csv(f, '/Users/Will/msan/692/wjyoung-web/sample.csv')
X <- rnorm(100) # generating (independently) 100 realizations of N(0,1)
par(mfrow=c(2,1)) #dividing the page into 2 rows and one column
plot(X,type='l',main='iid noise') #plotting the data
X <- rnorm(100) # generating (independently) 100 realizations of N(0,1)
par(mfrow=c(2,1)) #dividing the page into 2 rows and one column
plot(X,type='l',main='iid noise') #plotting the data
acf(X,main='Sample ACF for iid noise') # plotting the acf
?acf
X <- arima.sim(list(order = c(0,0,1), ma = 0.85), n = 200) # simulating data from an MA(1) process
par(mfrow=c(2,1)) #dividing the page into 2 rows and one column
plot(X,type='l',main='Simulated data from MA(1)') #plotting the data
acf(X,main='Sample ACF for MA(1)') # plotting the acf
X <- arima.sim(list(order = c(1,0,0), ar = .7), n = 200) # simulating data from an AR(1) process
par(mfrow=c(2,1)) #dividing the page into 2 rows and one column
plot(X,type='l',main='Simulated data from AR(1)') #plotting the data
plot(X,type='l',main='Simulated data from AR(1)') #plotting the data
acf(X,main='Sample ACF for AR(1)') # plotting the acf
a <- seq(1,100,length=200)
X <- 22-15*a+0.3*a^2+rnorm(200,500,50)
par(mfrow=c(2,1)) #dividing the page into 2 rows and one column
ts.plot(X, main = "Time Series With Significant Trend")
acf(X, main = "ACF Exhibits Seasonality + Slow Decay")
install.packages('lawstat')
numerator <- -0.2 + sqrt(0.2^2 - 4 * (-0.48))
numerator_1 <- -0.2 + sqrt(0.2^2 - 4 * (-0.48))
numerator_2 <- -0.2 - sqrt(0.2^2 - 4 * (-0.48))
0.2^2 - 4 * (-0.48
)
denominator <- 2 * (-0.48)
upper <-  numerator_1 / denominator
lower <- numerator_2 / denominator
upper <-  numerator_1 / denominator
lower <- numerator_2 / denominator
numerator_1 <- -1.9 + sqrt(1.9^2 - 4 * (0.88))
numerator_2 <- -1.9 - sqrt(1.9^2 - 4 * (0.88))
denominator <- 2 * (-0.88)
upper <-  numerator_1 / denominator
lower <- numerator_2 / denominator
numerator_1 <- -0.2 + sqrt(0.2^2 - 4 * (0.7))
numerator_2 <- -0.2 - sqrt(0.2^2 - 4 * (0.7))
denominator <- 2 * (0.7)
upper <-  numerator_1 / denominator
lower <- numerator_2 / denominator
df <- LakeHuron
str(df)
rm(df)
lh1 <- diff(LakeHuron)
plot(lh1, ylab = "lh1")
acf(lh1)
adf.test(lh1)
rm(list=ls())
library(tseries)
install.packages(tseries)
library('tseries')
install.packages('tseries')
library('tseries')
rm(list=ls())
lh1 <- diff(LakeHuron)
plot(lh1, ylab = "lh1")
acf(lh1)
adf.test(lh1)
plot(LakeHuron)
BJ1 <- diff(BJsales)
plot(BJ1, ylab = "BJ1")
acf(BJ1)
adf.test(BJ1)
BJ2 <- diff(BJ1)
plot(BJ2, ylab = "BJ2")
acf(BJ2)
adf.test(BJ2)
BJ1 <- diff(BJsales)
plot(BJ1, ylab = "BJ1")
acf(BJ1)
adf.test(BJ1)
BJ2 <- diff(BJ1)
plot(BJ2, ylab = "BJ2")
acf(BJ2)
adf.test(BJ2)
adf.test(lh1)
m1 <- arima(lh1, order=c(2,0,0), method = 'ML')
m1 <- arima(lh1, order=c(1,0,0), method = 'ML')
m2 <- arima(lh1, order=c(2,0,0))
D <- -2*(m1$loglik - m2$loglik)
pval <- 1-pchisq(D,1)
print(c("Test Statistic:",round(D,4),"P-value:",round(pval,4)))
libray(lawstat)
library(lawstat)
print(c("Variance m1: ", m1$sigma2, "Variance m2: ", m2$sigma2))
print(c("AIC m1:", m1$aic, "AIC m2:" m2$aic))
print(c("AIC m1:", m1$aic, "AIC m2:", m2$aic))
print(c("MLE m1:", m1$loglik, "MLE m2:", m2$loglik))
library(lawstat)
e <- m2$residuals # residuals
par(mfrow=c(2,1))
plot(e, main="Residuals vs t", ylab="")
abline(h=0, col="red")
plot(e, main="Residuals vs t", ylab="")
abline(h=0, col="red")
t.test(e)
par(mfrow=c(1,1))
plot(e, main="Residuals vs t", ylab="")
abline(v=c(37,74,111), lwd=3, col="red")
group <- c(rep(1,37),rep(2,37),rep(3,37),rep(4,37))
levene.test(e,group) #Levene
bartlett.test(e,group) #Bartlett
tsdiag(m) #ACF and Ljung-Box test all in one!
tsdiag(m2) #ACF and Ljung-Box test all in one!
library(forecast)
plot(HoltWinters(x = LakeHuron, gamma = F))
plot(HoltWinters(x = LakeHuron, gamma = F))
install.packages(var)
install.packages('var')
install.packages('vars')
library(vars)
? VAR
df$Rank <- with(df1, ave(Var, Group, FUN = yourfunction))
source('~/msan/multivariate/hw2/sims.R')
shiny::runGitHub("wjyoung-hw2", "usfviz", subdir = "src/app.R")
shiny::runGitHub("wjyoung-hw2", "usfviz", subdir = "src/app.R")
shiny::runGitHub("wjyoung-hw2", "usfviz", subdir = "src/app.R")
shiny::runGitHub("wjyoung-hw2", "usfviz", subdir = "src/app.R")
shiny::runGitHub("wjyoung-hw2", "usfviz", subdir = "src/app.R")
shiny::runGitHub("albertsoima-hw2", "usfviz", subdir = "")
shiny::runGitHub("shivathudi-hw2", "usfviz")
source('~/.active-rstudio-document')
View(fb_df)
source('~/.active-rstudio-document')
runApp('src')
db_df <- read_db("../data_set_diabetes/diabetic_data.csv")
df <- load_db()
load_db <- function() {
return(read.csv("../data_set_diabetes/diabetic_data.csv", sep = ",", stringsAsFactors = FALSE))
}
df <- load_db()
load_db <- function() {
return(read.csv("../dataset_diabetes/diabetic_data.csv", sep = ",", stringsAsFactors = FALSE))
}
df <- load_db()
setwd("~/msan/vis/hw3/src/")
load_db <- function() {
return(read.csv("../dataset_diabetes/diabetic_data.csv", sep = ",", stringsAsFactors = FALSE))
}
df <- load_db()
View(df)
runApp('~/msan/vis/lab2/App')
runApp()
